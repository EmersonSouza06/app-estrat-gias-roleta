import React, { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Zap, Target, AlertTriangle, Heart } from "lucide-react";

export default function GreenZeroCalculator({ lastNumbers }) {
  const [analysis, setAnalysis] = useState(null);
  const [recommendations, setRecommendations] = useState([]);

  const analyzeGreenZero = (numbers) => {
    const recs = [];
    let zeroProximity = 0;
    
    // Padr√£o conhecido da estrat√©gia: sequ√™ncias que puxam o zero
    const zeroPullingSequences = [
      [27, 13, 34, 3, 12],
      [32, 23, 26],
      [1, 5, 8, 11, 14, 23, 26, 32] // vizinhos do zero
    ];

    // Analisar √∫ltimos 5-7 n√∫meros
    if (numbers.length >= 5) {
      const last5 = numbers.slice(-5);
      const last7 = numbers.slice(-7);
      
      // Verificar se h√° sequ√™ncia que n√£o cont√©m zero
      const hasZero = last7.includes(0);
      
      if (!hasZero) {
        // Verificar padr√µes espec√≠ficos
        const sequence = last5.join(',');
        
        // Padr√£o exemplo da imagem: 27,13,34,3,12...
        if (last5.includes(27) || last5.includes(13) || last5.includes(34)) {
          recs.push({
            type: 'specific_pattern',
            description: 'Sequ√™ncia similar ao padr√£o (27,13,34,3,12) detectada. Zero verde pr√≥ximo!',
            numbers: [0],
            confidence: 92
          });
          zeroProximity = 95;
        }

        // Padr√£o de vizinhos finais: 32,23,26
        const endingPattern = [32, 23, 26];
        if (endingPattern.some(n => last5.includes(n))) {
          recs.push({
            type: 'ending_pattern',
            description: 'N√∫meros finais do padr√£o detectados (32,23,26). Zero deve aparecer!',
            numbers: [0],
            confidence: 88
          });
          zeroProximity = Math.max(zeroProximity, 90);
        }

        // An√°lise geral: sem zero h√° muito tempo
        if (numbers.length >= 8 && !numbers.slice(-8).includes(0)) {
          recs.push({
            type: 'zero_absence',
            description: 'Zero ausente h√° muitos giros. Probabilidade crescente de aparecer.',
            numbers: [0],
            confidence: 85
          });
          zeroProximity = Math.max(zeroProximity, 85);
        }

        // Estrat√©gia espec√≠fica: cobertura de terminais zero
        if (zeroProximity > 80) {
          recs.push({
            type: 'terminal_zero_coverage',
            description: 'Realizar martingale simples no zero. Cubra todos os terminais zero como prote√ß√£o.',
            numbers: [0, 10, 20, 30],
            confidence: 95
          });
        }
      } else {
        // Se o zero saiu recentemente
        recs.push({
          type: 'zero_reset',
          description: 'Zero saiu recentemente. Aguarde nova sequ√™ncia se formar.',
          numbers: [],
          confidence: 60
        });
      }
    }

    return {
      zeroProximity,
      hasZeroInLast10: numbers.slice(-10).includes(0),
      lastZeroPosition: numbers.lastIndexOf(0),
      gapSinceZero: numbers.length - numbers.lastIndexOf(0) - 1,
      recs
    };
  };

  useEffect(() => {
    if (lastNumbers) {
      const numbers = lastNumbers.split(',')
        .map(n => parseInt(n.trim()))
        .filter(n => !isNaN(n) && n >= 0 && n <= 36);
      
      const result = analyzeGreenZero(numbers);
      setAnalysis(result);
      setRecommendations(result.recs);
    }
  }, [lastNumbers]);

  return (
    <div className="space-y-6">
      {/* Explica√ß√£o */}
      <Card className="bg-zinc-800/30 border-zinc-700">
        <CardHeader>
          <CardTitle className="text-green-400 flex items-center gap-2">
            <Heart className="w-5 h-5" />
            Estrat√©gia do Zero Verde
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-3">
          <p className="text-zinc-300 text-sm">
            A estrat√©gia do Zero Verde √© similar aos vizinhos do zero, mas n√£o precisa esperar trocar 
            o croupier. Analisa sequ√™ncias espec√≠ficas que "puxam" o zero.
          </p>
          <div className="p-3 bg-green-900/20 rounded-lg border border-green-800/30">
            <p className="text-green-400 text-sm font-semibold mb-2">Exemplo de Sequ√™ncia Poderosa:</p>
            <div className="flex flex-wrap gap-2">
              {[27, 13, 34, 3, 12].map((num, index) => (
                <div key={index} className="flex items-center">
                  <Badge className="bg-green-500/20 text-green-400 border-green-500/30">
                    {num}
                  </Badge>
                  {index < 4 && <span className="text-zinc-500 mx-1">‚Üí</span>}
                </div>
              ))}
              <span className="text-green-400 mx-2 font-bold">üíö ZERO</span>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* An√°lise */}
      {analysis && (
        <Card className="bg-green-900/20 border-green-800/30">
          <CardHeader>
            <CardTitle className="text-green-400">An√°lise do Zero Verde</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
              <div className="text-center p-3 bg-green-900/20 rounded-lg">
                <div className="text-2xl font-bold text-green-400">{analysis.zeroProximity}%</div>
                <div className="text-xs text-zinc-400">Proximidade do Zero</div>
              </div>
              <div className="text-center p-3 bg-green-900/20 rounded-lg">
                <div className="text-2xl font-bold text-green-400">
                  {analysis.gapSinceZero >= 0 ? analysis.gapSinceZero : 'N/A'}
                </div>
                <div className="text-xs text-zinc-400">Giros sem Zero</div>
              </div>
              <div className="text-center p-3 bg-green-900/20 rounded-lg">
                <div className="text-2xl font-bold text-green-400">
                  {analysis.hasZeroInLast10 ? '‚úì' : '‚úó'}
                </div>
                <div className="text-xs text-zinc-400">Zero nos √öltimos 10</div>
              </div>
            </div>

            {analysis.zeroProximity > 80 && (
              <div className="mt-4 p-4 bg-green-900/30 rounded-lg border border-green-600/30">
                <div className="flex items-center gap-2 mb-2">
                  <Zap className="w-5 h-5 text-green-400" />
                  <span className="text-green-400 font-bold">ALTO POTENCIAL PARA ZERO!</span>
                </div>
                <p className="text-zinc-300 text-sm">
                  As condi√ß√µes est√£o ideais para o zero aparecer. Execute a estrat√©gia com confian√ßa.
                </p>
              </div>
            )}
          </CardContent>
        </Card>
      )}

      {/* Recomenda√ß√µes */}
      {recommendations.length > 0 && (
        <Card className="bg-emerald-900/20 border-emerald-800/30">
          <CardHeader>
            <CardTitle className="text-emerald-400 flex items-center gap-2">
              <Target className="w-5 h-5" />
              Estrat√©gia Recomendada
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {recommendations.map((rec, index) => (
                <div key={index} className="p-4 bg-emerald-900/20 rounded-lg border border-emerald-800/30">
                  <div className="flex items-start justify-between mb-2">
                    <p className="text-zinc-300 text-sm flex-1">{rec.description}</p>
                    <Badge className="bg-emerald-500/20 text-emerald-400 border-emerald-500/30 ml-2">
                      {rec.confidence}% confian√ßa
                    </Badge>
                  </div>
                  
                  {rec.numbers.length > 0 && (
                    <div className="mt-3">
                      <div className="flex flex-wrap gap-2">
                        {rec.numbers.map((num, idx) => (
                          <Badge 
                            key={idx}
                            className={num === 0 ? 
                              "bg-green-500/30 text-green-300 border-green-500/50 font-bold text-lg px-3 py-1" :
                              "bg-blue-500/20 text-blue-400 border-blue-500/30"
                            }
                          >
                            {num === 0 ? 'üíö ZERO' : num}
                          </Badge>
                        ))}
                      </div>
                    </div>
                  )}

                  {rec.type === 'terminal_zero_coverage' && (
                    <div className="mt-3 p-3 bg-yellow-900/20 rounded-lg border border-yellow-800/30">
                      <p className="text-yellow-300 text-sm">
                        <strong>üí° Dica:</strong> Realize apenas 1 martingale no zero. 
                        Use terminais zero (10,20,30) como prote√ß√£o extra.
                      </p>
                    </div>
                  )}
                </div>
              ))}
            </div>
          </CardContent>
        </Card>
      )}

      {/* Prote√ß√£o */}
      <Card className="bg-red-900/20 border-red-800/30">
        <CardHeader>
          <CardTitle className="text-red-400 flex items-center gap-2">
            <AlertTriangle className="w-5 h-5" />
            Protocolo de Prote√ß√£o
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-3">
          <div className="p-3 bg-red-900/20 rounded-lg">
            <p className="text-zinc-300 text-sm">
              <strong>Martingale Controlado:</strong> Realize apenas 1 martingale (repetir a jogada) 
              quando o padr√£o for identificado. N√£o force al√©m disso.
            </p>
          </div>
          <div className="p-3 bg-yellow-900/20 rounded-lg border border-yellow-800/30">
            <p className="text-yellow-300 text-sm">
              <strong>Prote√ß√£o com Terminais:</strong> Sempre cubra os terminais zero (10,20,30) 
              para aumentar suas chances de recupera√ß√£o.
            </p>
          </div>
          <div className="p-3 bg-green-900/20 rounded-lg border border-green-800/30">
            <p className="text-green-300 text-sm">
              <strong>Momento Ideal:</strong> Execute quando a sequ√™ncia estiver formada e 
              n√£o houver zero nos √∫ltimos 6-8 n√∫meros.
            </p>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}