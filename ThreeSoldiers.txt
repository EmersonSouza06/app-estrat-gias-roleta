import React, { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Shield, Target } from "lucide-react";

export default function ThreeSoldiersCalculator({ lastNumbers }) {
  const [analysis, setAnalysis] = useState(null);
  const redNumbers = [1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36];
  
  const getNumberColor = (num) => (num === 0) ? "green" : redNumbers.includes(num) ? "red" : "black";

  const analyzeSoldiers = (numbers) => {
    const recs = [];
    if (numbers.length < 3) return { recs };

    const lastThreeColors = numbers.slice(-3).map(getNumberColor);
    
    if (lastThreeColors.every(c => c === 'red')) {
      recs.push({
        type: 'tres_soldados_red',
        description: `Padrão "Três Soldados" Vermelhos detectado. Entre para a cor diferente do trio.`,
        bet: `Apostar na cor PRETA`,
        confidence: 90
      });
    }
    
    if (lastThreeColors.every(c => c === 'black')) {
      recs.push({
        type: 'tres_soldados_black',
        description: `Padrão "Três Soldados" Pretos detectado. Entre para a cor diferente do trio.`,
        bet: `Apostar na cor VERMELHA`,
        confidence: 90
      });
    }

    return { recs };
  };

  useEffect(() => {
    if (lastNumbers) {
      const numbers = lastNumbers.split(',').map(n => parseInt(n.trim())).filter(n => !isNaN(n));
      const result = analyzeSoldiers(numbers);
      setAnalysis(result);
    }
  }, [lastNumbers]);

  return (
    <div className="space-y-6">
      <Card className="bg-zinc-800/30 border-zinc-700">
        <CardHeader>
          <CardTitle className="text-amber-400 flex items-center gap-2">
            <Shield className="w-5 h-5" />
            Três Soldados
          </CardTitle>
        </CardHeader>
        <CardContent>
          <p className="text-zinc-300 text-sm">Estratégia baseada na visualização de três números sequenciais da mesma cor. Após a formação do trio, a entrada é feita na cor oposta.</p>
        </CardContent>
      </Card>
      
      {analysis && analysis.recs.length > 0 && (
        <Card className="bg-blue-900/20 border-blue-800/30">
          <CardHeader>
            <CardTitle className="text-blue-400 flex items-center gap-2"><Target className="w-5 h-5" />Recomendação de Aposta</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
             {analysis.recs.map((rec, index) => (
              <div key={index} className="p-4 bg-blue-900/20 rounded-lg border border-blue-800/30">
                 <div className="flex items-start justify-between mb-2">
                  <p className="text-zinc-300 text-sm flex-1">{rec.description}</p>
                  <Badge className="bg-blue-500/20 text-blue-400 border-blue-500/30 ml-2">{rec.confidence}%</Badge>
                </div>
                <div className="mt-2 p-3 bg-amber-900/20 rounded-lg">
                    <p className="text-amber-400 font-semibold text-lg text-center">{rec.bet}</p>
                </div>
              </div>
            ))}
          </CardContent>
        </Card>
      )}
    </div>
  );
}