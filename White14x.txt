import React, { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Gem, Target, AlertTriangle } from "lucide-react";

export default function White14xCalculator({ lastNumbers }) {
  const [analysis, setAnalysis] = useState(null);

  const analyzeWhiteBonus = (numbers) => {
    const recs = [];
    if (numbers.length < 3) return { recs };

    const lastThree = numbers.slice(-3);
    
    // Gatilho: 4, 6 e 7 vermelhos
    const redNumbers = [1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36];
    const triggerNumbers = [4, 6, 7];
    const redTriggersPresent = lastThree.filter(n => triggerNumbers.includes(n) && redNumbers.includes(n)).length;

    if (redTriggersPresent >= 2) {
         recs.push({
            type: 'gatilho_vermelho',
            description: `Gatilho de "Branco 14x" detectado! A presença de ${triggerNumbers.join(', ')} vermelhos puxa o branco.`,
            bet: `Apostar no Branco/Verde (0)`,
            confidence: 75,
            isHighRisk: true,
        });
    }

    // Gatilho: 5, 8, 10, 7
    const seq1 = [5, 8, 10, 7];
    if (numbers.slice(-4).every((n, i) => n === seq1[i])) {
        recs.push({
            type: 'gatilho_sequencia',
            description: `Sequência exata (5,8,10,7) que puxa o branco detectada!`,
            bet: `Apostar no Branco/Verde (0)`,
            confidence: 85,
            isHighRisk: true,
        });
    }

    return { recs };
  };

  useEffect(() => {
    if (lastNumbers) {
      const numbers = lastNumbers.split(',').map(n => parseInt(n.trim())).filter(n => !isNaN(n));
      const result = analyzeWhiteBonus(numbers);
      setAnalysis(result);
    }
  }, [lastNumbers]);

  return (
    <div className="space-y-6">
      <Card className="bg-zinc-800/30 border-zinc-700">
        <CardHeader>
          <CardTitle className="text-amber-400 flex items-center gap-2">
            <Gem className="w-5 h-5" />
            Bônus Branco 14x
          </CardTitle>
        </CardHeader>
        <CardContent>
          <p className="text-zinc-300 text-sm">Estratégia de altíssimo risco e recompensa para acertar o branco (0). Baseia-se em sequências específicas que, segundo a observação, tendem a "puxar" o branco.</p>
        </CardContent>
      </Card>
      
      {analysis && analysis.recs.length > 0 && (
        <Card className="bg-blue-900/20 border-blue-800/30">
          <CardHeader>
            <CardTitle className="text-blue-400 flex items-center gap-2"><Target className="w-5 h-5" />Gatilho Encontrado!</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
             {analysis.recs.map((rec, index) => (
              <div key={index} className="p-4 bg-blue-900/20 rounded-lg border border-blue-800/30">
                 <div className="flex items-start justify-between mb-2">
                  <p className="text-zinc-300 text-sm flex-1">{rec.description}</p>
                  <Badge className="bg-blue-500/20 text-blue-400 border-blue-500/30 ml-2">{rec.confidence}%</Badge>
                </div>
                <div className="mt-2 p-3 bg-amber-900/20 rounded-lg">
                    <p className="text-amber-400 font-semibold text-lg text-center">{rec.bet}</p>
                </div>
              </div>
            ))}
 